// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


/*! 
 * @file Odometry.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */
#ifndef _EXAMPLE_INTERFACES_SRV_ADD_TWO_INTS_HPP_
#define _EXAMPLE_INTERFACES_SRV_ADD_TWO_INTS_HPP_


#include "../topic.hpp"


#include "../std_msgs/Header.hpp"
#include "../geometry_msgs/PoseWithCovariance.hpp"
#include "../geometry_msgs/TwistWithCovariance.hpp"

namespace example_interfaces_srv {

class AddTwoIntsRequest : public ros2::Topic<AddTwoIntsRequest>
{
public: 
  int64_t a;
  int64_t b;

  AddTwoIntsRequest():
    Topic("example_interfaces::srv::dds_::AddTwoInts_Request_", "AddTwoInts_Request", EXAMPLE_INTERFACES_SRV_ADD_TWO_INTS_REQUEST_ID), a(0), b(0)
  {

  }

  bool serialize(void* msg_buf, const AddTwoIntsRequest* topic)
  {
    ucdrBuffer* writer = (ucdrBuffer*)msg_buf;
    (void) ucdr_serialize_int64_t(writer, topic->a);
    (void) ucdr_serialize_int64_t(writer, topic->b);

    return !writer->error;
  }

  bool deserialize(void* msg_buf, AddTwoIntsRequest* topic)
  {
    ucdrBuffer* reader = (ucdrBuffer*)msg_buf;
    (void) ucdr_deserialize_int64_t(reader, &topic->a);
    (void) ucdr_deserialize_int64_t(reader, &topic->b);
    
    return !reader->error;
  }

  uint32_t size_of_topic(const AddTwoIntsRequest* topic, uint32_t size)
  {
    (void)(topic);

    uint32_t previousSize = size;
    size += ucdr_alignment(size, 8) + 8;
    size += ucdr_alignment(size, 8) + 8;

    return size - previousSize;
  }

};

class AddTwoIntsResponse : public ros2::Topic<AddTwoIntsResponse>
{
public:
  int64_t sum;

  AddTwoIntsResponse():
    Topic("example_interfaces::srv::dds_::AddTwoInts_Response_", "AddTwoInts_Response", EXAMPLE_INTERFACES_SRV_ADD_TWO_INTS_RESPONSE_ID), sum(0)
  {

  }

  bool serialize(void* msg_buf, const AddTwoIntsResponse* topic)
  {
    ucdrBuffer* writer = (ucdrBuffer*)msg_buf;
    (void) ucdr_serialize_int64_t(writer, topic->sum);

    return !writer->error;
  }

  bool deserialize(void* msg_buf, AddTwoIntsResponse* topic)
  {
    ucdrBuffer* reader = (ucdrBuffer*)msg_buf;
    (void) ucdr_deserialize_int64_t(reader, &topic->sum);
    
    return !reader->error;
  }

  uint32_t size_of_topic(const AddTwoIntsResponse* topic, uint32_t size)
  {
    (void)(topic);

    uint32_t previousSize = size;
    size += ucdr_alignment(size, 8) + 8;

    return size - previousSize;
  }

};

} // namespace example_interfaces_srv

#endif // _EXAMPLE_INTERFACES_SRV_ADD_TWO_INTS_HPP_
